# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

pool:
  vmImage: 'Ubuntu 16.04'

variables:
  buildConfiguration: 'Release'
  dockerId: 'sebagomez'

#jobs:
#- job: Build  # name of the job, no spaces allowed
#  displayName: string  # friendly name to display in the UI
#  dependsOn: string | [ string ]
#  condition: string
#  strategy:
#    matrix: # matrix strategy, see below
#    parallel: # parallel strategy, see below
#    maxParallel: number # maximum number of agents to simultaneously run copies of this job on
#  continueOnError: boolean  # 'true' if future jobs should run even if this job fails; defaults to 'false'
#  pool: string | [ server ]
#  workspace:
#    clean: outputs | resources | all # what to clean up after the job runs
#  container: string # container resource to run this job inside
#  timeoutInMinutes: number # how long to run the job before automatically cancelling
#  cancelTimeoutInMinutes: number # how much time to give run always even if cancelled tasks before killing them
#  variables: { string: string } | [ variable ]
#  steps: [ script | bash | powershell | checkout | task | stepTemplate ]


steps:
- script: dotnet build --configuration $(buildConfiguration) src/AngularWebStorageExplorer/AngularWebStorageExplorer.csproj
  displayName: 'dotnet build'
- script: dotnet publish -o ../../Docker/root --configuration $(buildConfiguration) --no-build src/AngularWebStorageExplorer/AngularWebStorageExplorer.csproj
  displayName: 'dotnet publish'
#- script: docker build --build-arg BUILD=$(build.buildNumber) -t $(dockerId)/azurestorageexplorer:$(build.buildNumber) .
#  workingDirectory: $(build.SourcesDirectory)/Docker
#  displayName: 'docker build'
#- script: docker tag $(dockerId)/azurestorageexplorer:$(build.buildNumber) $(dockerId)/azurestorageexplorer
#  displayName: 'docker tag'
#- script: docker login -u $(dockerId) -p $(dockerPwd) 
#  displayName: 'docker login'
#- script: docker push $(dockerId)/azurestorageexplorer:$(build.buildNumber)
#  displayName: 'docker push'
#- script: docker push $(dockerId)/azurestorageexplorer
#  displayName: 'docker push latest'

# Publish Build Artifacts
# Publish build artifacts to Azure Artifacts/TFS or a file share
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(build.SourcesDirectory)/Docker' 
    artifactName: 'deploy' 
    #publishLocation: 'Container' # Options: container, filePath
    #targetPath: # Required when publishLocation == FilePath
    #parallel: false # Optional
    #parallelCount: # Optional